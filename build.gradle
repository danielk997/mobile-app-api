plugins {
    id 'org.springframework.boot' version '2.7.2'
    id 'io.spring.dependency-management' version '1.0.12.RELEASE'
    id 'java'

    id 'com.github.johnrengelman.processes' version '0.5.0'
    id 'org.springdoc.openapi-gradle-plugin' version '1.3.3'
    id 'org.openapi.generator' version '5.3.0'

    id "com.microsoft.azure.azurewebapp" version "1.2.0"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.microsoft.sqlserver:mssql-jdbc'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

openApi {
    outputDir = file("$buildDir/openApi")
    outputFileName = "openApi.json"
}

openApiValidate {
    inputSpec = "$buildDir/openApi/openApi.json"
}

openApiGenerate {
    generatorName = "typescript-angular"
    inputSpec = "$buildDir/openApi/openApi.json".toString()
    outputDir = "$buildDir/openApi/client/api-client".toString()

    configOptions = [fileNaming: "kebab-case"]
}

azurewebapp {
    subscription = '402416ea-e41e-47ec-b3fa-31e2ed1da46e'
    resourceGroup = 'daniel_test_rg'
    appName = 'danielk-test-api'
    region = 'westeurope'
    runtime {
        os = 'Linux'
        webContainer = 'Java SE'
        javaVersion = 'Java 17'
    }
}